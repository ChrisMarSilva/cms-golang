#version: "3.8"

services:
  backend-1:
    build: .
    container_name: backend-1
    hostname: backend-1
    restart: unless-stopped
    expose:
      - "8080"
    networks:
      - backend
      - payment-processor
    environment:
      - LISTEN_ADDR=release
      - URI_PORT=8080
      - REDIS_ADDR=redis:6379
      - REDIS_PWD=123
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - NUM_WORKERS=2
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.65" # 0.5 "0.75
          memory: "80MB" # 100MB "175M"

  backend-2:
    build: .
    container_name: backend-2
    hostname: backend-2
    restart: unless-stopped
    expose:
      - "8080"
    networks:
      - backend
      - payment-processor
    environment:
      - LISTEN_ADDR=release
      - URI_PORT=8080
      - REDIS_ADDR=redis:6379
      - REDIS_PWD=123
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - NUM_WORKERS=2
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.65"
          memory: "80MB"

  redis:
    image: redis:8.0.3-alpine
    container_name: redis
    hostname: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    # command: redis-server --save 60 1 --loglevel warning
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.2" # '0.5' 0.3
          memory: "30MB" # "100MB"

  nginx:
    image: nginx:1.29.0-alpine
    container_name: nginx-lb
    hostname: nginx-lb
    ports:
      - 9999:9999
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend
    depends_on:
      - backend-1
      - backend-2
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB" # 50MB

  #   db:
  #     image: postgres:17-alpine
  #     container_name: payment-db
  #     hostname: db
  #     environment:
  #       - POSTGRES_PASSWORD=rinha25
  #       - POSTGRES_USER=rinha25
  #       - POSTGRES_DB=payments_db
  #     ports:
  #       - "5432:5432"
  #     command: postgres -c max_connections=450 -c shared_buffers=32MB -c effective_cache_size=96MB -c work_mem=3MB -c maintenance_work_mem=12MB -c synchronous_commit=off -c fsync=off
  #     networks:
  #       - backend
  #       - payment-processor
  #     volumes: [pgdata:/var/lib/postgresql/data]
  #     volumes:
  #       - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #     #   - pgdata:/var/lib/postgresql/data
  #     deploy:
  #       resources:
  #         limits:
  #           cpus: "0.4"
  #           memory: "100MB"

  #   prometheus:
  #     image: prom/prometheus:v2.55.0
  #     container_name: prometheus
  #     volumes:
  #       - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     ports:
  #       - "9090:9090"
  #     networks:
  #       - backend
  #     depends_on:
  #       - backend-1
  #       - backend-2

  #   grafana:
  #     image: grafana/grafana:11.3.0x
  #     container_name: grafana
  #     volumes:
  #       - ./grafana/provision:/etc/grafana/provisioning
  #       - ./grafana.yml:/etc/grafana/provisioning/datasources/datasource.yaml
  #       - grafana-data:/var/lib/grafana
  #     ports:
  #       - "3000:3000"
  #     networks:
  #       - backend
  #     environment:
  #       GF_SECURITY_ADMIN_USER: admin
  #       GF_SECURITY_ADMIN_PASSWORD: admin

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
# volumes:
#   pgdata: {}
