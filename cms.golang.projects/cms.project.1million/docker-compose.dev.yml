services:
  redis:
    image: redis:8.2.0-alpine
    container_name: redis
    hostname: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --appendonly no --maxclients 20000 --maxmemory 32mb --maxmemory-policy allkeys-lru --loglevel warning
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:4.1.3-management
    container_name: rabbitmq
    hostname: rabbitmq
    command: rabbitmq-server
    ports:
      - "5552:5552"
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_ERLANG_COOKIE=secretcookie
    networks:
      - backend

  jaeger:
    image: jaegertracing/all-in-one:latest
    hostname: jaeger
    container_name: jaeger
    restart: always
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 16686:16686
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 4317:4317
      - 5778:5778
      - 4318:4318
      - 9411:9411
    environment:
      - LOG_LEVEL=debug
    networks:
      - backend

  prometheus:
    image: prom/prometheus:v3.5.0
    hostname: prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana:11.3.0
    hostname: grafana
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - backend

networks:
  backend:
    driver: bridge
